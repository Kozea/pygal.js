// Generated by CoffeeScript 1.2.1-pre
(function() {
  var anim_steps, get_translation, padding, r_translation, tooltip, tooltip_font_size, tooltip_timeout, untooltip;

  padding = 5;

  tooltip_timeout = 0;

  tooltip_font_size = this.config.tooltip_font_size;

  anim_steps = this.config.animation_steps;

  r_translation = /translate\((\d+)[ ,]+(\d+)\)/;

  get_translation = function($elt) {
    return (r_translation.exec($elt.attr('transform')) || []).slice(1);
  };

  tooltip = function($elt) {
    var $label, $rect, $text, $tooltip, $value, current_x, current_y, h, w, x, x_elt, xlink, y, y_elt, _ref;
    clearTimeout(tooltip_timeout);
    $tooltip = $('#tooltip').css({
      opacity: 1
    });
    $text = $tooltip.find('text');
    $label = $tooltip.find('tspan.label');
    $value = $tooltip.find('tspan.value');
    $rect = $tooltip.find('rect');
    $label.text($elt.siblings('.label').text());
    $value.text($elt.siblings('.value').text());
    xlink = $elt.siblings('.xlink').text() || null;
    $tooltip.find('a').attr('href', xlink);
    $text.attr('x', padding);
    $text.attr('y', padding + tooltip_font_size);
    $value.attr('x', padding);
    $value.attr('dy', $label.text() ? tooltip_font_size + padding : 0);
    w = $text.width() + 2 * padding;
    h = $text.height() + 2 * padding;
    $rect.attr('width', w);
    $rect.attr('height', h);
    x_elt = $elt.siblings('.x');
    y_elt = $elt.siblings('.y');
    x = parseInt(x_elt.text());
    if (x_elt.hasClass('centered')) {
      x -= w / 2;
    } else if (x_elt.hasClass('left')) {
      x -= w;
    }
    y = parseInt(y_elt.text());
    if (y_elt.hasClass('centered')) {
      y -= h / 2;
    } else if (y_elt.hasClass('top')) {
      y -= h;
    }
    _ref = get_translation($tooltip), current_x = _ref[0], current_y = _ref[1];
    if (current_x === x && current_y === y) return;
    return $tooltip.attr('transform', "translate(" + x + " " + y + ")");
  };

  untooltip = function() {
    return tooltip_timeout = setTimeout((function() {
      return $('#tooltip').css({
        opacity: 0
      });
    }), 1000);
  };

  $(function() {
    $('.text-overlay .series').hide();
    $('.reactive').hover((function() {
      return $(this).addClass('active');
    }), (function() {
      return $(this).removeClass('active');
    }));
    $('.activate-serie').hover((function() {
      var num;
      num = this.id.replace('activate-serie-', '');
      $('.text-overlay .serie-' + num).show();
      return $('.serie-' + num + ' .reactive').addClass('active');
    }), function() {
      var num;
      num = this.id.replace('activate-serie-', '');
      $('.text-overlay .serie-' + num).hide();
      return $('.serie-' + num + ' .reactive').removeClass('active');
    });
    return $('.tooltip-trigger').hover((function() {
      return tooltip($(this));
    }), (function() {
      return untooltip();
    }));
  });

}).call(this);
